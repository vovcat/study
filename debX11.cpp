// g++ -g -Og -Wall -Wextra -c debX11.cpp

#include <stdarg.h> // va_list, va_start(), va_copy(), va_end()
#include <printf.h> // printf_info, register_printf_function()
#include <string> // std::string
#include <X11/Xlib.h> // Display, X*
#include <X11/extensions/XShm.h> // XShmGetEventBase()

#define XK_MISCELLANY
#define XK_XKB_KEYS
#define XK_3270
#define XK_LATIN1
#define XK_LATIN2
#define XK_LATIN3
#define XK_LATIN4
#define XK_LATIN8
#define XK_LATIN9
#define XK_KATAKANA
#define XK_ARABIC
#define XK_CYRILLIC
#define XK_GREEK
#define XK_TECHNICAL
#define XK_SPECIAL
#define XK_PUBLISHING
#define XK_APL
#define XK_HEBREW
#define XK_THAI
#define XK_KOREAN
#define XK_ARMENIAN
#define XK_GEORGIAN
#define XK_CAUCASUS
#define XK_VIETNAMESE
#define XK_CURRENCY
#define XK_MATHEMATICAL

#include <X11/keysymdef.h> // XK_VoidSymbol, ...

#ifndef ARRAY_SIZE
#define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
#endif
#ifndef ARRAYSIZE
#define ARRAYSIZE(a) ARRAY_SIZE(s)
#endif
#ifndef DEBUGF
#define DEBUGF(fmt, args...) printf_err(fmt "\n", args)
#endif

const char *debX11_image_format(int format);
const char *debX11_vclass(int c_class);
std::string debX11_event(const XEvent *event);
std::string debX11_atom(Atom atom);
std::string debX11_win(Window w);

int debX11init(Display *display);
int debX11_error(Display *d, XErrorEvent *e);

#define debX11ev(dst, event, args...) debX11ev2(dst, event, "", None, args)
void debX11ev2(Window dst, XEvent event, const char* dir, Window src, const char *fmt, ...);// __attribute__((format(printf, 5, 6)));
void debX11str(Window win, const char *fmt, ...);// __attribute__((format(printf, 2, 3)));
std::string ssprintf(const char* fmt, ...);// __attribute__((format(printf, 1, 2)));
int printf_err(const char* fmt, ...);// __attribute__((format(printf, 1, 2)));

static Display *debX11display;

const char *debX11_image_format(int format)
{
    switch (format) {
        case XYBitmap: return "XYBitmap";
        case XYPixmap: return "XYPixmap";
        case ZPixmap: return "ZPixmap";
        default: return "UnknownImageFormat";
    }
}

const char *debX11_vclass(int c_class)
{
    switch (c_class) {
        case StaticGray: return "StaticGray";
        case GrayScale: return "GrayScale";
        case StaticColor: return "StaticColor";
        case PseudoColor: return "PseudoColor";
        case TrueColor: return "TrueColor";
        case DirectColor: return "DirectColor";
        default: return "UnknownVisualClass";
    }
}

static const struct {
    int type;
    const char *name;
} XEventNames[] = {
#define TAB(x) { x, #x }
    TAB(KeyPress),
    TAB(KeyRelease),
    TAB(ButtonPress),
    TAB(ButtonRelease),
    TAB(MotionNotify),
    TAB(EnterNotify),
    TAB(LeaveNotify),
    TAB(FocusIn),
    TAB(FocusOut),
    TAB(KeymapNotify),
    TAB(Expose),
    TAB(GraphicsExpose),
    TAB(NoExpose),
    TAB(VisibilityNotify),
    TAB(CreateNotify),
    TAB(DestroyNotify),
    TAB(UnmapNotify),
    TAB(MapNotify),
    TAB(MapRequest),
    TAB(ReparentNotify),
    TAB(ConfigureNotify),
    TAB(ConfigureRequest),
    TAB(GravityNotify),
    TAB(ResizeRequest),
    TAB(CirculateNotify),
    TAB(CirculateRequest),
    TAB(PropertyNotify),
    TAB(SelectionClear),
    TAB(SelectionRequest),
    TAB(SelectionNotify),
    TAB(ColormapNotify),
    TAB(ClientMessage),
    TAB(MappingNotify),
    TAB(GenericEvent),
#undef TAB
};

std::string debX11_event(const XEvent *event)
{
    for (size_t i = 0; i < ARRAY_SIZE(XEventNames); i++)
        if (XEventNames[i].type == event->type)
            return XEventNames[i].name;

    if (event->type == XShmGetEventBase(debX11display))
        return "ShmCompletion";

    return ssprintf("Unknown(%d)", event->type);
}

static const struct {
    KeySym sym;
    const char *name;
} XKeySymNames[] = {
#define TAB(x) { x, #x }
    TAB(XK_VoidSymbol),
    TAB(XK_BackSpace),
    TAB(XK_Tab),
    TAB(XK_Linefeed),
    TAB(XK_Clear),
    TAB(XK_Return),
    TAB(XK_Pause),
    TAB(XK_Scroll_Lock),
    TAB(XK_Sys_Req),
    TAB(XK_Escape),
    TAB(XK_Delete),
    TAB(XK_Multi_key),
    TAB(XK_Codeinput),
    TAB(XK_SingleCandidate),
    TAB(XK_MultipleCandidate),
    TAB(XK_PreviousCandidate),
    TAB(XK_Kanji),
    TAB(XK_Muhenkan),
    TAB(XK_Henkan_Mode),
    TAB(XK_Henkan),
    TAB(XK_Romaji),
    TAB(XK_Hiragana),
    TAB(XK_Katakana),
    TAB(XK_Hiragana_Katakana),
    TAB(XK_Zenkaku),
    TAB(XK_Hankaku),
    TAB(XK_Zenkaku_Hankaku),
    TAB(XK_Touroku),
    TAB(XK_Massyo),
    TAB(XK_Kana_Lock),
    TAB(XK_Kana_Shift),
    TAB(XK_Eisu_Shift),
    TAB(XK_Eisu_toggle),
    TAB(XK_Kanji_Bangou),
    TAB(XK_Zen_Koho),
    TAB(XK_Mae_Koho),
    TAB(XK_Home),
    TAB(XK_Left),
    TAB(XK_Up),
    TAB(XK_Right),
    TAB(XK_Down),
    TAB(XK_Prior),
    TAB(XK_Page_Up),
    TAB(XK_Next),
    TAB(XK_Page_Down),
    TAB(XK_End),
    TAB(XK_Begin),
    TAB(XK_Select),
    TAB(XK_Print),
    TAB(XK_Execute),
    TAB(XK_Insert),
    TAB(XK_Undo),
    TAB(XK_Redo),
    TAB(XK_Menu),
    TAB(XK_Find),
    TAB(XK_Cancel),
    TAB(XK_Help),
    TAB(XK_Break),
    TAB(XK_Mode_switch),
    TAB(XK_script_switch),
    TAB(XK_Num_Lock),
    TAB(XK_KP_Space),
    TAB(XK_KP_Tab),
    TAB(XK_KP_Enter),
    TAB(XK_KP_F1),
    TAB(XK_KP_F2),
    TAB(XK_KP_F3),
    TAB(XK_KP_F4),
    TAB(XK_KP_Home),
    TAB(XK_KP_Left),
    TAB(XK_KP_Up),
    TAB(XK_KP_Right),
    TAB(XK_KP_Down),
    TAB(XK_KP_Prior),
    TAB(XK_KP_Page_Up),
    TAB(XK_KP_Next),
    TAB(XK_KP_Page_Down),
    TAB(XK_KP_End),
    TAB(XK_KP_Begin),
    TAB(XK_KP_Insert),
    TAB(XK_KP_Delete),
    TAB(XK_KP_Equal),
    TAB(XK_KP_Multiply),
    TAB(XK_KP_Add),
    TAB(XK_KP_Separator),
    TAB(XK_KP_Subtract),
    TAB(XK_KP_Decimal),
    TAB(XK_KP_Divide),
    TAB(XK_KP_0),
    TAB(XK_KP_1),
    TAB(XK_KP_2),
    TAB(XK_KP_3),
    TAB(XK_KP_4),
    TAB(XK_KP_5),
    TAB(XK_KP_6),
    TAB(XK_KP_7),
    TAB(XK_KP_8),
    TAB(XK_KP_9),
    TAB(XK_F1),
    TAB(XK_F2),
    TAB(XK_F3),
    TAB(XK_F4),
    TAB(XK_F5),
    TAB(XK_F6),
    TAB(XK_F7),
    TAB(XK_F8),
    TAB(XK_F9),
    TAB(XK_F10),
    TAB(XK_F11),
    TAB(XK_L1),
    TAB(XK_F12),
    TAB(XK_L2),
    TAB(XK_F13),
    TAB(XK_L3),
    TAB(XK_F14),
    TAB(XK_L4),
    TAB(XK_F15),
    TAB(XK_L5),
    TAB(XK_F16),
    TAB(XK_L6),
    TAB(XK_F17),
    TAB(XK_L7),
    TAB(XK_F18),
    TAB(XK_L8),
    TAB(XK_F19),
    TAB(XK_L9),
    TAB(XK_F20),
    TAB(XK_L10),
    TAB(XK_F21),
    TAB(XK_R1),
    TAB(XK_F22),
    TAB(XK_R2),
    TAB(XK_F23),
    TAB(XK_R3),
    TAB(XK_F24),
    TAB(XK_R4),
    TAB(XK_F25),
    TAB(XK_R5),
    TAB(XK_F26),
    TAB(XK_R6),
    TAB(XK_F27),
    TAB(XK_R7),
    TAB(XK_F28),
    TAB(XK_R8),
    TAB(XK_F29),
    TAB(XK_R9),
    TAB(XK_F30),
    TAB(XK_R10),
    TAB(XK_F31),
    TAB(XK_R11),
    TAB(XK_F32),
    TAB(XK_R12),
    TAB(XK_F33),
    TAB(XK_R13),
    TAB(XK_F34),
    TAB(XK_R14),
    TAB(XK_F35),
    TAB(XK_R15),
    TAB(XK_Shift_L),
    TAB(XK_Shift_R),
    TAB(XK_Control_L),
    TAB(XK_Control_R),
    TAB(XK_Caps_Lock),
    TAB(XK_Shift_Lock),
    TAB(XK_Meta_L),
    TAB(XK_Meta_R),
    TAB(XK_Alt_L),
    TAB(XK_Alt_R),
    TAB(XK_Super_L),
    TAB(XK_Super_R),
    TAB(XK_Hyper_L),
    TAB(XK_Hyper_R),
    TAB(XK_ISO_Lock),
    TAB(XK_ISO_Level2_Latch),
    TAB(XK_ISO_Level3_Shift),
    TAB(XK_ISO_Level3_Latch),
    TAB(XK_ISO_Level3_Lock),
    TAB(XK_ISO_Level5_Shift),
    TAB(XK_ISO_Level5_Latch),
    TAB(XK_ISO_Level5_Lock),
    TAB(XK_ISO_Group_Shift),
    TAB(XK_ISO_Group_Latch),
    TAB(XK_ISO_Group_Lock),
    TAB(XK_ISO_Next_Group),
    TAB(XK_ISO_Next_Group_Lock),
    TAB(XK_ISO_Prev_Group),
    TAB(XK_ISO_Prev_Group_Lock),
    TAB(XK_ISO_First_Group),
    TAB(XK_ISO_First_Group_Lock),
    TAB(XK_ISO_Last_Group),
    TAB(XK_ISO_Last_Group_Lock),
    TAB(XK_ISO_Left_Tab),
    TAB(XK_ISO_Move_Line_Up),
    TAB(XK_ISO_Move_Line_Down),
    TAB(XK_ISO_Partial_Line_Up),
    TAB(XK_ISO_Partial_Line_Down),
    TAB(XK_ISO_Partial_Space_Left),
    TAB(XK_ISO_Partial_Space_Right),
    TAB(XK_ISO_Set_Margin_Left),
    TAB(XK_ISO_Set_Margin_Right),
    TAB(XK_ISO_Release_Margin_Left),
    TAB(XK_ISO_Release_Margin_Right),
    TAB(XK_ISO_Release_Both_Margins),
    TAB(XK_ISO_Fast_Cursor_Left),
    TAB(XK_ISO_Fast_Cursor_Right),
    TAB(XK_ISO_Fast_Cursor_Up),
    TAB(XK_ISO_Fast_Cursor_Down),
    TAB(XK_ISO_Continuous_Underline),
    TAB(XK_ISO_Discontinuous_Underline),
    TAB(XK_ISO_Emphasize),
    TAB(XK_ISO_Center_Object),
    TAB(XK_ISO_Enter),
    TAB(XK_dead_grave),
    TAB(XK_dead_acute),
    TAB(XK_dead_circumflex),
    TAB(XK_dead_tilde),
    TAB(XK_dead_perispomeni),
    TAB(XK_dead_macron),
    TAB(XK_dead_breve),
    TAB(XK_dead_abovedot),
    TAB(XK_dead_diaeresis),
    TAB(XK_dead_abovering),
    TAB(XK_dead_doubleacute),
    TAB(XK_dead_caron),
    TAB(XK_dead_cedilla),
    TAB(XK_dead_ogonek),
    TAB(XK_dead_iota),
    TAB(XK_dead_voiced_sound),
    TAB(XK_dead_semivoiced_sound),
    TAB(XK_dead_belowdot),
    TAB(XK_dead_hook),
    TAB(XK_dead_horn),
    TAB(XK_dead_stroke),
    TAB(XK_dead_abovecomma),
    TAB(XK_dead_psili),
    TAB(XK_dead_abovereversedcomma),
    TAB(XK_dead_dasia),
    TAB(XK_dead_doublegrave),
    TAB(XK_dead_belowring),
    TAB(XK_dead_belowmacron),
    TAB(XK_dead_belowcircumflex),
    TAB(XK_dead_belowtilde),
    TAB(XK_dead_belowbreve),
    TAB(XK_dead_belowdiaeresis),
    TAB(XK_dead_invertedbreve),
    TAB(XK_dead_belowcomma),
    TAB(XK_dead_currency),
    TAB(XK_dead_lowline),
    TAB(XK_dead_aboveverticalline),
    TAB(XK_dead_belowverticalline),
    TAB(XK_dead_longsolidusoverlay),
    TAB(XK_dead_a),
    TAB(XK_dead_A),
    TAB(XK_dead_e),
    TAB(XK_dead_E),
    TAB(XK_dead_i),
    TAB(XK_dead_I),
    TAB(XK_dead_o),
    TAB(XK_dead_O),
    TAB(XK_dead_u),
    TAB(XK_dead_U),
    TAB(XK_dead_small_schwa),
    TAB(XK_dead_capital_schwa),
    TAB(XK_dead_greek),
    TAB(XK_First_Virtual_Screen),
    TAB(XK_Prev_Virtual_Screen),
    TAB(XK_Next_Virtual_Screen),
    TAB(XK_Last_Virtual_Screen),
    TAB(XK_Terminate_Server),
    TAB(XK_AccessX_Enable),
    TAB(XK_AccessX_Feedback_Enable),
    TAB(XK_RepeatKeys_Enable),
    TAB(XK_SlowKeys_Enable),
    TAB(XK_BounceKeys_Enable),
    TAB(XK_StickyKeys_Enable),
    TAB(XK_MouseKeys_Enable),
    TAB(XK_MouseKeys_Accel_Enable),
    TAB(XK_Overlay1_Enable),
    TAB(XK_Overlay2_Enable),
    TAB(XK_AudibleBell_Enable),
    TAB(XK_Pointer_Left),
    TAB(XK_Pointer_Right),
    TAB(XK_Pointer_Up),
    TAB(XK_Pointer_Down),
    TAB(XK_Pointer_UpLeft),
    TAB(XK_Pointer_UpRight),
    TAB(XK_Pointer_DownLeft),
    TAB(XK_Pointer_DownRight),
    TAB(XK_Pointer_Button_Dflt),
    TAB(XK_Pointer_Button1),
    TAB(XK_Pointer_Button2),
    TAB(XK_Pointer_Button3),
    TAB(XK_Pointer_Button4),
    TAB(XK_Pointer_Button5),
    TAB(XK_Pointer_DblClick_Dflt),
    TAB(XK_Pointer_DblClick1),
    TAB(XK_Pointer_DblClick2),
    TAB(XK_Pointer_DblClick3),
    TAB(XK_Pointer_DblClick4),
    TAB(XK_Pointer_DblClick5),
    TAB(XK_Pointer_Drag_Dflt),
    TAB(XK_Pointer_Drag1),
    TAB(XK_Pointer_Drag2),
    TAB(XK_Pointer_Drag3),
    TAB(XK_Pointer_Drag4),
    TAB(XK_Pointer_Drag5),
    TAB(XK_Pointer_EnableKeys),
    TAB(XK_Pointer_Accelerate),
    TAB(XK_Pointer_DfltBtnNext),
    TAB(XK_Pointer_DfltBtnPrev),
    TAB(XK_ch),
    TAB(XK_Ch),
    TAB(XK_CH),
    TAB(XK_c_h),
    TAB(XK_C_h),
    TAB(XK_C_H),
    TAB(XK_3270_Duplicate),
    TAB(XK_3270_FieldMark),
    TAB(XK_3270_Right2),
    TAB(XK_3270_Left2),
    TAB(XK_3270_BackTab),
    TAB(XK_3270_EraseEOF),
    TAB(XK_3270_EraseInput),
    TAB(XK_3270_Reset),
    TAB(XK_3270_Quit),
    TAB(XK_3270_PA1),
    TAB(XK_3270_PA2),
    TAB(XK_3270_PA3),
    TAB(XK_3270_Test),
    TAB(XK_3270_Attn),
    TAB(XK_3270_CursorBlink),
    TAB(XK_3270_AltCursor),
    TAB(XK_3270_KeyClick),
    TAB(XK_3270_Jump),
    TAB(XK_3270_Ident),
    TAB(XK_3270_Rule),
    TAB(XK_3270_Copy),
    TAB(XK_3270_Play),
    TAB(XK_3270_Setup),
    TAB(XK_3270_Record),
    TAB(XK_3270_ChangeScreen),
    TAB(XK_3270_DeleteWord),
    TAB(XK_3270_ExSelect),
    TAB(XK_3270_CursorSelect),
    TAB(XK_3270_PrintScreen),
    TAB(XK_3270_Enter),
    TAB(XK_space),
    TAB(XK_exclam),
    TAB(XK_quotedbl),
    TAB(XK_numbersign),
    TAB(XK_dollar),
    TAB(XK_percent),
    TAB(XK_ampersand),
    TAB(XK_apostrophe),
    TAB(XK_quoteright),
    TAB(XK_parenleft),
    TAB(XK_parenright),
    TAB(XK_asterisk),
    TAB(XK_plus),
    TAB(XK_comma),
    TAB(XK_minus),
    TAB(XK_period),
    TAB(XK_slash),
    TAB(XK_0),
    TAB(XK_1),
    TAB(XK_2),
    TAB(XK_3),
    TAB(XK_4),
    TAB(XK_5),
    TAB(XK_6),
    TAB(XK_7),
    TAB(XK_8),
    TAB(XK_9),
    TAB(XK_colon),
    TAB(XK_semicolon),
    TAB(XK_less),
    TAB(XK_equal),
    TAB(XK_greater),
    TAB(XK_question),
    TAB(XK_at),
    TAB(XK_A),
    TAB(XK_B),
    TAB(XK_C),
    TAB(XK_D),
    TAB(XK_E),
    TAB(XK_F),
    TAB(XK_G),
    TAB(XK_H),
    TAB(XK_I),
    TAB(XK_J),
    TAB(XK_K),
    TAB(XK_L),
    TAB(XK_M),
    TAB(XK_N),
    TAB(XK_O),
    TAB(XK_P),
    TAB(XK_Q),
    TAB(XK_R),
    TAB(XK_S),
    TAB(XK_T),
    TAB(XK_U),
    TAB(XK_V),
    TAB(XK_W),
    TAB(XK_X),
    TAB(XK_Y),
    TAB(XK_Z),
    TAB(XK_bracketleft),
    TAB(XK_backslash),
    TAB(XK_bracketright),
    TAB(XK_asciicircum),
    TAB(XK_underscore),
    TAB(XK_grave),
    TAB(XK_quoteleft),
    TAB(XK_a),
    TAB(XK_b),
    TAB(XK_c),
    TAB(XK_d),
    TAB(XK_e),
    TAB(XK_f),
    TAB(XK_g),
    TAB(XK_h),
    TAB(XK_i),
    TAB(XK_j),
    TAB(XK_k),
    TAB(XK_l),
    TAB(XK_m),
    TAB(XK_n),
    TAB(XK_o),
    TAB(XK_p),
    TAB(XK_q),
    TAB(XK_r),
    TAB(XK_s),
    TAB(XK_t),
    TAB(XK_u),
    TAB(XK_v),
    TAB(XK_w),
    TAB(XK_x),
    TAB(XK_y),
    TAB(XK_z),
    TAB(XK_braceleft),
    TAB(XK_bar),
    TAB(XK_braceright),
    TAB(XK_asciitilde),
    TAB(XK_nobreakspace),
    TAB(XK_exclamdown),
    TAB(XK_cent),
    TAB(XK_sterling),
    TAB(XK_currency),
    TAB(XK_yen),
    TAB(XK_brokenbar),
    TAB(XK_section),
    TAB(XK_diaeresis),
    TAB(XK_copyright),
    TAB(XK_ordfeminine),
    TAB(XK_guillemotleft),
    TAB(XK_notsign),
    TAB(XK_hyphen),
    TAB(XK_registered),
    TAB(XK_macron),
    TAB(XK_degree),
    TAB(XK_plusminus),
    TAB(XK_twosuperior),
    TAB(XK_threesuperior),
    TAB(XK_acute),
    TAB(XK_mu),
    TAB(XK_paragraph),
    TAB(XK_periodcentered),
    TAB(XK_cedilla),
    TAB(XK_onesuperior),
    TAB(XK_masculine),
    TAB(XK_guillemotright),
    TAB(XK_onequarter),
    TAB(XK_onehalf),
    TAB(XK_threequarters),
    TAB(XK_questiondown),
    TAB(XK_Agrave),
    TAB(XK_Aacute),
    TAB(XK_Acircumflex),
    TAB(XK_Atilde),
    TAB(XK_Adiaeresis),
    TAB(XK_Aring),
    TAB(XK_AE),
    TAB(XK_Ccedilla),
    TAB(XK_Egrave),
    TAB(XK_Eacute),
    TAB(XK_Ecircumflex),
    TAB(XK_Ediaeresis),
    TAB(XK_Igrave),
    TAB(XK_Iacute),
    TAB(XK_Icircumflex),
    TAB(XK_Idiaeresis),
    TAB(XK_ETH),
    TAB(XK_Eth),
    TAB(XK_Ntilde),
    TAB(XK_Ograve),
    TAB(XK_Oacute),
    TAB(XK_Ocircumflex),
    TAB(XK_Otilde),
    TAB(XK_Odiaeresis),
    TAB(XK_multiply),
    TAB(XK_Oslash),
    TAB(XK_Ooblique),
    TAB(XK_Ugrave),
    TAB(XK_Uacute),
    TAB(XK_Ucircumflex),
    TAB(XK_Udiaeresis),
    TAB(XK_Yacute),
    TAB(XK_THORN),
    TAB(XK_Thorn),
    TAB(XK_ssharp),
    TAB(XK_agrave),
    TAB(XK_aacute),
    TAB(XK_acircumflex),
    TAB(XK_atilde),
    TAB(XK_adiaeresis),
    TAB(XK_aring),
    TAB(XK_ae),
    TAB(XK_ccedilla),
    TAB(XK_egrave),
    TAB(XK_eacute),
    TAB(XK_ecircumflex),
    TAB(XK_ediaeresis),
    TAB(XK_igrave),
    TAB(XK_iacute),
    TAB(XK_icircumflex),
    TAB(XK_idiaeresis),
    TAB(XK_eth),
    TAB(XK_ntilde),
    TAB(XK_ograve),
    TAB(XK_oacute),
    TAB(XK_ocircumflex),
    TAB(XK_otilde),
    TAB(XK_odiaeresis),
    TAB(XK_division),
    TAB(XK_oslash),
    TAB(XK_ooblique),
    TAB(XK_ugrave),
    TAB(XK_uacute),
    TAB(XK_ucircumflex),
    TAB(XK_udiaeresis),
    TAB(XK_yacute),
    TAB(XK_thorn),
    TAB(XK_ydiaeresis),
    TAB(XK_Aogonek),
    TAB(XK_breve),
    TAB(XK_Lstroke),
    TAB(XK_Lcaron),
    TAB(XK_Sacute),
    TAB(XK_Scaron),
    TAB(XK_Scedilla),
    TAB(XK_Tcaron),
    TAB(XK_Zacute),
    TAB(XK_Zcaron),
    TAB(XK_Zabovedot),
    TAB(XK_aogonek),
    TAB(XK_ogonek),
    TAB(XK_lstroke),
    TAB(XK_lcaron),
    TAB(XK_sacute),
    TAB(XK_caron),
    TAB(XK_scaron),
    TAB(XK_scedilla),
    TAB(XK_tcaron),
    TAB(XK_zacute),
    TAB(XK_doubleacute),
    TAB(XK_zcaron),
    TAB(XK_zabovedot),
    TAB(XK_Racute),
    TAB(XK_Abreve),
    TAB(XK_Lacute),
    TAB(XK_Cacute),
    TAB(XK_Ccaron),
    TAB(XK_Eogonek),
    TAB(XK_Ecaron),
    TAB(XK_Dcaron),
    TAB(XK_Dstroke),
    TAB(XK_Nacute),
    TAB(XK_Ncaron),
    TAB(XK_Odoubleacute),
    TAB(XK_Rcaron),
    TAB(XK_Uring),
    TAB(XK_Udoubleacute),
    TAB(XK_Tcedilla),
    TAB(XK_racute),
    TAB(XK_abreve),
    TAB(XK_lacute),
    TAB(XK_cacute),
    TAB(XK_ccaron),
    TAB(XK_eogonek),
    TAB(XK_ecaron),
    TAB(XK_dcaron),
    TAB(XK_dstroke),
    TAB(XK_nacute),
    TAB(XK_ncaron),
    TAB(XK_odoubleacute),
    TAB(XK_rcaron),
    TAB(XK_uring),
    TAB(XK_udoubleacute),
    TAB(XK_tcedilla),
    TAB(XK_abovedot),
    TAB(XK_Hstroke),
    TAB(XK_Hcircumflex),
    TAB(XK_Iabovedot),
    TAB(XK_Gbreve),
    TAB(XK_Jcircumflex),
    TAB(XK_hstroke),
    TAB(XK_hcircumflex),
    TAB(XK_idotless),
    TAB(XK_gbreve),
    TAB(XK_jcircumflex),
    TAB(XK_Cabovedot),
    TAB(XK_Ccircumflex),
    TAB(XK_Gabovedot),
    TAB(XK_Gcircumflex),
    TAB(XK_Ubreve),
    TAB(XK_Scircumflex),
    TAB(XK_cabovedot),
    TAB(XK_ccircumflex),
    TAB(XK_gabovedot),
    TAB(XK_gcircumflex),
    TAB(XK_ubreve),
    TAB(XK_scircumflex),
    TAB(XK_kra),
    TAB(XK_kappa),
    TAB(XK_Rcedilla),
    TAB(XK_Itilde),
    TAB(XK_Lcedilla),
    TAB(XK_Emacron),
    TAB(XK_Gcedilla),
    TAB(XK_Tslash),
    TAB(XK_rcedilla),
    TAB(XK_itilde),
    TAB(XK_lcedilla),
    TAB(XK_emacron),
    TAB(XK_gcedilla),
    TAB(XK_tslash),
    TAB(XK_ENG),
    TAB(XK_eng),
    TAB(XK_Amacron),
    TAB(XK_Iogonek),
    TAB(XK_Eabovedot),
    TAB(XK_Imacron),
    TAB(XK_Ncedilla),
    TAB(XK_Omacron),
    TAB(XK_Kcedilla),
    TAB(XK_Uogonek),
    TAB(XK_Utilde),
    TAB(XK_Umacron),
    TAB(XK_amacron),
    TAB(XK_iogonek),
    TAB(XK_eabovedot),
    TAB(XK_imacron),
    TAB(XK_ncedilla),
    TAB(XK_omacron),
    TAB(XK_kcedilla),
    TAB(XK_uogonek),
    TAB(XK_utilde),
    TAB(XK_umacron),
    TAB(XK_Wcircumflex),
    TAB(XK_wcircumflex),
    TAB(XK_Ycircumflex),
    TAB(XK_ycircumflex),
    TAB(XK_Babovedot),
    TAB(XK_babovedot),
    TAB(XK_Dabovedot),
    TAB(XK_dabovedot),
    TAB(XK_Fabovedot),
    TAB(XK_fabovedot),
    TAB(XK_Mabovedot),
    TAB(XK_mabovedot),
    TAB(XK_Pabovedot),
    TAB(XK_pabovedot),
    TAB(XK_Sabovedot),
    TAB(XK_sabovedot),
    TAB(XK_Tabovedot),
    TAB(XK_tabovedot),
    TAB(XK_Wgrave),
    TAB(XK_wgrave),
    TAB(XK_Wacute),
    TAB(XK_wacute),
    TAB(XK_Wdiaeresis),
    TAB(XK_wdiaeresis),
    TAB(XK_Ygrave),
    TAB(XK_ygrave),
    TAB(XK_OE),
    TAB(XK_oe),
    TAB(XK_Ydiaeresis),
    TAB(XK_overline),
    TAB(XK_kana_fullstop),
    TAB(XK_kana_openingbracket),
    TAB(XK_kana_closingbracket),
    TAB(XK_kana_comma),
    TAB(XK_kana_conjunctive),
    TAB(XK_kana_middledot),
    TAB(XK_kana_WO),
    TAB(XK_kana_a),
    TAB(XK_kana_i),
    TAB(XK_kana_u),
    TAB(XK_kana_e),
    TAB(XK_kana_o),
    TAB(XK_kana_ya),
    TAB(XK_kana_yu),
    TAB(XK_kana_yo),
    TAB(XK_kana_tsu),
    TAB(XK_kana_tu),
    TAB(XK_prolongedsound),
    TAB(XK_kana_A),
    TAB(XK_kana_I),
    TAB(XK_kana_U),
    TAB(XK_kana_E),
    TAB(XK_kana_O),
    TAB(XK_kana_KA),
    TAB(XK_kana_KI),
    TAB(XK_kana_KU),
    TAB(XK_kana_KE),
    TAB(XK_kana_KO),
    TAB(XK_kana_SA),
    TAB(XK_kana_SHI),
    TAB(XK_kana_SU),
    TAB(XK_kana_SE),
    TAB(XK_kana_SO),
    TAB(XK_kana_TA),
    TAB(XK_kana_CHI),
    TAB(XK_kana_TI),
    TAB(XK_kana_TSU),
    TAB(XK_kana_TU),
    TAB(XK_kana_TE),
    TAB(XK_kana_TO),
    TAB(XK_kana_NA),
    TAB(XK_kana_NI),
    TAB(XK_kana_NU),
    TAB(XK_kana_NE),
    TAB(XK_kana_NO),
    TAB(XK_kana_HA),
    TAB(XK_kana_HI),
    TAB(XK_kana_FU),
    TAB(XK_kana_HU),
    TAB(XK_kana_HE),
    TAB(XK_kana_HO),
    TAB(XK_kana_MA),
    TAB(XK_kana_MI),
    TAB(XK_kana_MU),
    TAB(XK_kana_ME),
    TAB(XK_kana_MO),
    TAB(XK_kana_YA),
    TAB(XK_kana_YU),
    TAB(XK_kana_YO),
    TAB(XK_kana_RA),
    TAB(XK_kana_RI),
    TAB(XK_kana_RU),
    TAB(XK_kana_RE),
    TAB(XK_kana_RO),
    TAB(XK_kana_WA),
    TAB(XK_kana_N),
    TAB(XK_voicedsound),
    TAB(XK_semivoicedsound),
    TAB(XK_kana_switch),
    TAB(XK_Farsi_0),
    TAB(XK_Farsi_1),
    TAB(XK_Farsi_2),
    TAB(XK_Farsi_3),
    TAB(XK_Farsi_4),
    TAB(XK_Farsi_5),
    TAB(XK_Farsi_6),
    TAB(XK_Farsi_7),
    TAB(XK_Farsi_8),
    TAB(XK_Farsi_9),
    TAB(XK_Arabic_percent),
    TAB(XK_Arabic_superscript_alef),
    TAB(XK_Arabic_tteh),
    TAB(XK_Arabic_peh),
    TAB(XK_Arabic_tcheh),
    TAB(XK_Arabic_ddal),
    TAB(XK_Arabic_rreh),
    TAB(XK_Arabic_comma),
    TAB(XK_Arabic_fullstop),
    TAB(XK_Arabic_0),
    TAB(XK_Arabic_1),
    TAB(XK_Arabic_2),
    TAB(XK_Arabic_3),
    TAB(XK_Arabic_4),
    TAB(XK_Arabic_5),
    TAB(XK_Arabic_6),
    TAB(XK_Arabic_7),
    TAB(XK_Arabic_8),
    TAB(XK_Arabic_9),
    TAB(XK_Arabic_semicolon),
    TAB(XK_Arabic_question_mark),
    TAB(XK_Arabic_hamza),
    TAB(XK_Arabic_maddaonalef),
    TAB(XK_Arabic_hamzaonalef),
    TAB(XK_Arabic_hamzaonwaw),
    TAB(XK_Arabic_hamzaunderalef),
    TAB(XK_Arabic_hamzaonyeh),
    TAB(XK_Arabic_alef),
    TAB(XK_Arabic_beh),
    TAB(XK_Arabic_tehmarbuta),
    TAB(XK_Arabic_teh),
    TAB(XK_Arabic_theh),
    TAB(XK_Arabic_jeem),
    TAB(XK_Arabic_hah),
    TAB(XK_Arabic_khah),
    TAB(XK_Arabic_dal),
    TAB(XK_Arabic_thal),
    TAB(XK_Arabic_ra),
    TAB(XK_Arabic_zain),
    TAB(XK_Arabic_seen),
    TAB(XK_Arabic_sheen),
    TAB(XK_Arabic_sad),
    TAB(XK_Arabic_dad),
    TAB(XK_Arabic_tah),
    TAB(XK_Arabic_zah),
    TAB(XK_Arabic_ain),
    TAB(XK_Arabic_ghain),
    TAB(XK_Arabic_tatweel),
    TAB(XK_Arabic_feh),
    TAB(XK_Arabic_qaf),
    TAB(XK_Arabic_kaf),
    TAB(XK_Arabic_lam),
    TAB(XK_Arabic_meem),
    TAB(XK_Arabic_noon),
    TAB(XK_Arabic_ha),
    TAB(XK_Arabic_heh),
    TAB(XK_Arabic_waw),
    TAB(XK_Arabic_alefmaksura),
    TAB(XK_Arabic_yeh),
    TAB(XK_Arabic_fathatan),
    TAB(XK_Arabic_dammatan),
    TAB(XK_Arabic_kasratan),
    TAB(XK_Arabic_fatha),
    TAB(XK_Arabic_damma),
    TAB(XK_Arabic_kasra),
    TAB(XK_Arabic_shadda),
    TAB(XK_Arabic_sukun),
    TAB(XK_Arabic_madda_above),
    TAB(XK_Arabic_hamza_above),
    TAB(XK_Arabic_hamza_below),
    TAB(XK_Arabic_jeh),
    TAB(XK_Arabic_veh),
    TAB(XK_Arabic_keheh),
    TAB(XK_Arabic_gaf),
    TAB(XK_Arabic_noon_ghunna),
    TAB(XK_Arabic_heh_doachashmee),
    TAB(XK_Farsi_yeh),
    TAB(XK_Arabic_farsi_yeh),
    TAB(XK_Arabic_yeh_baree),
    TAB(XK_Arabic_heh_goal),
    TAB(XK_Arabic_switch),
    TAB(XK_Cyrillic_GHE_bar),
    TAB(XK_Cyrillic_ghe_bar),
    TAB(XK_Cyrillic_ZHE_descender),
    TAB(XK_Cyrillic_zhe_descender),
    TAB(XK_Cyrillic_KA_descender),
    TAB(XK_Cyrillic_ka_descender),
    TAB(XK_Cyrillic_KA_vertstroke),
    TAB(XK_Cyrillic_ka_vertstroke),
    TAB(XK_Cyrillic_EN_descender),
    TAB(XK_Cyrillic_en_descender),
    TAB(XK_Cyrillic_U_straight),
    TAB(XK_Cyrillic_u_straight),
    TAB(XK_Cyrillic_U_straight_bar),
    TAB(XK_Cyrillic_u_straight_bar),
    TAB(XK_Cyrillic_HA_descender),
    TAB(XK_Cyrillic_ha_descender),
    TAB(XK_Cyrillic_CHE_descender),
    TAB(XK_Cyrillic_che_descender),
    TAB(XK_Cyrillic_CHE_vertstroke),
    TAB(XK_Cyrillic_che_vertstroke),
    TAB(XK_Cyrillic_SHHA),
    TAB(XK_Cyrillic_shha),
    TAB(XK_Cyrillic_SCHWA),
    TAB(XK_Cyrillic_schwa),
    TAB(XK_Cyrillic_I_macron),
    TAB(XK_Cyrillic_i_macron),
    TAB(XK_Cyrillic_O_bar),
    TAB(XK_Cyrillic_o_bar),
    TAB(XK_Cyrillic_U_macron),
    TAB(XK_Cyrillic_u_macron),
    TAB(XK_Serbian_dje),
    TAB(XK_Macedonia_gje),
    TAB(XK_Cyrillic_io),
    TAB(XK_Ukrainian_ie),
    TAB(XK_Ukranian_je),
    TAB(XK_Macedonia_dse),
    TAB(XK_Ukrainian_i),
    TAB(XK_Ukranian_i),
    TAB(XK_Ukrainian_yi),
    TAB(XK_Ukranian_yi),
    TAB(XK_Cyrillic_je),
    TAB(XK_Serbian_je),
    TAB(XK_Cyrillic_lje),
    TAB(XK_Serbian_lje),
    TAB(XK_Cyrillic_nje),
    TAB(XK_Serbian_nje),
    TAB(XK_Serbian_tshe),
    TAB(XK_Macedonia_kje),
    TAB(XK_Ukrainian_ghe_with_upturn),
    TAB(XK_Byelorussian_shortu),
    TAB(XK_Cyrillic_dzhe),
    TAB(XK_Serbian_dze),
    TAB(XK_numerosign),
    TAB(XK_Serbian_DJE),
    TAB(XK_Macedonia_GJE),
    TAB(XK_Cyrillic_IO),
    TAB(XK_Ukrainian_IE),
    TAB(XK_Ukranian_JE),
    TAB(XK_Macedonia_DSE),
    TAB(XK_Ukrainian_I),
    TAB(XK_Ukranian_I),
    TAB(XK_Ukrainian_YI),
    TAB(XK_Ukranian_YI),
    TAB(XK_Cyrillic_JE),
    TAB(XK_Serbian_JE),
    TAB(XK_Cyrillic_LJE),
    TAB(XK_Serbian_LJE),
    TAB(XK_Cyrillic_NJE),
    TAB(XK_Serbian_NJE),
    TAB(XK_Serbian_TSHE),
    TAB(XK_Macedonia_KJE),
    TAB(XK_Ukrainian_GHE_WITH_UPTURN),
    TAB(XK_Byelorussian_SHORTU),
    TAB(XK_Cyrillic_DZHE),
    TAB(XK_Serbian_DZE),
    TAB(XK_Cyrillic_yu),
    TAB(XK_Cyrillic_a),
    TAB(XK_Cyrillic_be),
    TAB(XK_Cyrillic_tse),
    TAB(XK_Cyrillic_de),
    TAB(XK_Cyrillic_ie),
    TAB(XK_Cyrillic_ef),
    TAB(XK_Cyrillic_ghe),
    TAB(XK_Cyrillic_ha),
    TAB(XK_Cyrillic_i),
    TAB(XK_Cyrillic_shorti),
    TAB(XK_Cyrillic_ka),
    TAB(XK_Cyrillic_el),
    TAB(XK_Cyrillic_em),
    TAB(XK_Cyrillic_en),
    TAB(XK_Cyrillic_o),
    TAB(XK_Cyrillic_pe),
    TAB(XK_Cyrillic_ya),
    TAB(XK_Cyrillic_er),
    TAB(XK_Cyrillic_es),
    TAB(XK_Cyrillic_te),
    TAB(XK_Cyrillic_u),
    TAB(XK_Cyrillic_zhe),
    TAB(XK_Cyrillic_ve),
    TAB(XK_Cyrillic_softsign),
    TAB(XK_Cyrillic_yeru),
    TAB(XK_Cyrillic_ze),
    TAB(XK_Cyrillic_sha),
    TAB(XK_Cyrillic_e),
    TAB(XK_Cyrillic_shcha),
    TAB(XK_Cyrillic_che),
    TAB(XK_Cyrillic_hardsign),
    TAB(XK_Cyrillic_YU),
    TAB(XK_Cyrillic_A),
    TAB(XK_Cyrillic_BE),
    TAB(XK_Cyrillic_TSE),
    TAB(XK_Cyrillic_DE),
    TAB(XK_Cyrillic_IE),
    TAB(XK_Cyrillic_EF),
    TAB(XK_Cyrillic_GHE),
    TAB(XK_Cyrillic_HA),
    TAB(XK_Cyrillic_I),
    TAB(XK_Cyrillic_SHORTI),
    TAB(XK_Cyrillic_KA),
    TAB(XK_Cyrillic_EL),
    TAB(XK_Cyrillic_EM),
    TAB(XK_Cyrillic_EN),
    TAB(XK_Cyrillic_O),
    TAB(XK_Cyrillic_PE),
    TAB(XK_Cyrillic_YA),
    TAB(XK_Cyrillic_ER),
    TAB(XK_Cyrillic_ES),
    TAB(XK_Cyrillic_TE),
    TAB(XK_Cyrillic_U),
    TAB(XK_Cyrillic_ZHE),
    TAB(XK_Cyrillic_VE),
    TAB(XK_Cyrillic_SOFTSIGN),
    TAB(XK_Cyrillic_YERU),
    TAB(XK_Cyrillic_ZE),
    TAB(XK_Cyrillic_SHA),
    TAB(XK_Cyrillic_E),
    TAB(XK_Cyrillic_SHCHA),
    TAB(XK_Cyrillic_CHE),
    TAB(XK_Cyrillic_HARDSIGN),
    TAB(XK_Greek_ALPHAaccent),
    TAB(XK_Greek_EPSILONaccent),
    TAB(XK_Greek_ETAaccent),
    TAB(XK_Greek_IOTAaccent),
    TAB(XK_Greek_IOTAdieresis),
    TAB(XK_Greek_IOTAdiaeresis),
    TAB(XK_Greek_OMICRONaccent),
    TAB(XK_Greek_UPSILONaccent),
    TAB(XK_Greek_UPSILONdieresis),
    TAB(XK_Greek_OMEGAaccent),
    TAB(XK_Greek_accentdieresis),
    TAB(XK_Greek_horizbar),
    TAB(XK_Greek_alphaaccent),
    TAB(XK_Greek_epsilonaccent),
    TAB(XK_Greek_etaaccent),
    TAB(XK_Greek_iotaaccent),
    TAB(XK_Greek_iotadieresis),
    TAB(XK_Greek_iotaaccentdieresis),
    TAB(XK_Greek_omicronaccent),
    TAB(XK_Greek_upsilonaccent),
    TAB(XK_Greek_upsilondieresis),
    TAB(XK_Greek_upsilonaccentdieresis),
    TAB(XK_Greek_omegaaccent),
    TAB(XK_Greek_ALPHA),
    TAB(XK_Greek_BETA),
    TAB(XK_Greek_GAMMA),
    TAB(XK_Greek_DELTA),
    TAB(XK_Greek_EPSILON),
    TAB(XK_Greek_ZETA),
    TAB(XK_Greek_ETA),
    TAB(XK_Greek_THETA),
    TAB(XK_Greek_IOTA),
    TAB(XK_Greek_KAPPA),
    TAB(XK_Greek_LAMDA),
    TAB(XK_Greek_LAMBDA),
    TAB(XK_Greek_MU),
    TAB(XK_Greek_NU),
    TAB(XK_Greek_XI),
    TAB(XK_Greek_OMICRON),
    TAB(XK_Greek_PI),
    TAB(XK_Greek_RHO),
    TAB(XK_Greek_SIGMA),
    TAB(XK_Greek_TAU),
    TAB(XK_Greek_UPSILON),
    TAB(XK_Greek_PHI),
    TAB(XK_Greek_CHI),
    TAB(XK_Greek_PSI),
    TAB(XK_Greek_OMEGA),
    TAB(XK_Greek_alpha),
    TAB(XK_Greek_beta),
    TAB(XK_Greek_gamma),
    TAB(XK_Greek_delta),
    TAB(XK_Greek_epsilon),
    TAB(XK_Greek_zeta),
    TAB(XK_Greek_eta),
    TAB(XK_Greek_theta),
    TAB(XK_Greek_iota),
    TAB(XK_Greek_kappa),
    TAB(XK_Greek_lamda),
    TAB(XK_Greek_lambda),
    TAB(XK_Greek_mu),
    TAB(XK_Greek_nu),
    TAB(XK_Greek_xi),
    TAB(XK_Greek_omicron),
    TAB(XK_Greek_pi),
    TAB(XK_Greek_rho),
    TAB(XK_Greek_sigma),
    TAB(XK_Greek_finalsmallsigma),
    TAB(XK_Greek_tau),
    TAB(XK_Greek_upsilon),
    TAB(XK_Greek_phi),
    TAB(XK_Greek_chi),
    TAB(XK_Greek_psi),
    TAB(XK_Greek_omega),
    TAB(XK_Greek_switch),
    TAB(XK_leftradical),
    TAB(XK_topleftradical),
    TAB(XK_horizconnector),
    TAB(XK_topintegral),
    TAB(XK_botintegral),
    TAB(XK_vertconnector),
    TAB(XK_topleftsqbracket),
    TAB(XK_botleftsqbracket),
    TAB(XK_toprightsqbracket),
    TAB(XK_botrightsqbracket),
    TAB(XK_topleftparens),
    TAB(XK_botleftparens),
    TAB(XK_toprightparens),
    TAB(XK_botrightparens),
    TAB(XK_leftmiddlecurlybrace),
    TAB(XK_rightmiddlecurlybrace),
    TAB(XK_topleftsummation),
    TAB(XK_botleftsummation),
    TAB(XK_topvertsummationconnector),
    TAB(XK_botvertsummationconnector),
    TAB(XK_toprightsummation),
    TAB(XK_botrightsummation),
    TAB(XK_rightmiddlesummation),
    TAB(XK_lessthanequal),
    TAB(XK_notequal),
    TAB(XK_greaterthanequal),
    TAB(XK_integral),
    TAB(XK_therefore),
    TAB(XK_variation),
    TAB(XK_infinity),
    TAB(XK_nabla),
    TAB(XK_approximate),
    TAB(XK_similarequal),
    TAB(XK_ifonlyif),
    TAB(XK_implies),
    TAB(XK_identical),
    TAB(XK_radical),
    TAB(XK_includedin),
    TAB(XK_includes),
    TAB(XK_intersection),
    TAB(XK_union),
    TAB(XK_logicaland),
    TAB(XK_logicalor),
    TAB(XK_partialderivative),
    TAB(XK_function),
    TAB(XK_leftarrow),
    TAB(XK_uparrow),
    TAB(XK_rightarrow),
    TAB(XK_downarrow),
    TAB(XK_blank),
    TAB(XK_soliddiamond),
    TAB(XK_checkerboard),
    TAB(XK_ht),
    TAB(XK_ff),
    TAB(XK_cr),
    TAB(XK_lf),
    TAB(XK_nl),
    TAB(XK_vt),
    TAB(XK_lowrightcorner),
    TAB(XK_uprightcorner),
    TAB(XK_upleftcorner),
    TAB(XK_lowleftcorner),
    TAB(XK_crossinglines),
    TAB(XK_horizlinescan1),
    TAB(XK_horizlinescan3),
    TAB(XK_horizlinescan5),
    TAB(XK_horizlinescan7),
    TAB(XK_horizlinescan9),
    TAB(XK_leftt),
    TAB(XK_rightt),
    TAB(XK_bott),
    TAB(XK_topt),
    TAB(XK_vertbar),
    TAB(XK_emspace),
    TAB(XK_enspace),
    TAB(XK_em3space),
    TAB(XK_em4space),
    TAB(XK_digitspace),
    TAB(XK_punctspace),
    TAB(XK_thinspace),
    TAB(XK_hairspace),
    TAB(XK_emdash),
    TAB(XK_endash),
    TAB(XK_signifblank),
    TAB(XK_ellipsis),
    TAB(XK_doubbaselinedot),
    TAB(XK_onethird),
    TAB(XK_twothirds),
    TAB(XK_onefifth),
    TAB(XK_twofifths),
    TAB(XK_threefifths),
    TAB(XK_fourfifths),
    TAB(XK_onesixth),
    TAB(XK_fivesixths),
    TAB(XK_careof),
    TAB(XK_figdash),
    TAB(XK_leftanglebracket),
    TAB(XK_decimalpoint),
    TAB(XK_rightanglebracket),
    TAB(XK_marker),
    TAB(XK_oneeighth),
    TAB(XK_threeeighths),
    TAB(XK_fiveeighths),
    TAB(XK_seveneighths),
    TAB(XK_trademark),
    TAB(XK_signaturemark),
    TAB(XK_trademarkincircle),
    TAB(XK_leftopentriangle),
    TAB(XK_rightopentriangle),
    TAB(XK_emopencircle),
    TAB(XK_emopenrectangle),
    TAB(XK_leftsinglequotemark),
    TAB(XK_rightsinglequotemark),
    TAB(XK_leftdoublequotemark),
    TAB(XK_rightdoublequotemark),
    TAB(XK_prescription),
    TAB(XK_permille),
    TAB(XK_minutes),
    TAB(XK_seconds),
    TAB(XK_latincross),
    TAB(XK_hexagram),
    TAB(XK_filledrectbullet),
    TAB(XK_filledlefttribullet),
    TAB(XK_filledrighttribullet),
    TAB(XK_emfilledcircle),
    TAB(XK_emfilledrect),
    TAB(XK_enopencircbullet),
    TAB(XK_enopensquarebullet),
    TAB(XK_openrectbullet),
    TAB(XK_opentribulletup),
    TAB(XK_opentribulletdown),
    TAB(XK_openstar),
    TAB(XK_enfilledcircbullet),
    TAB(XK_enfilledsqbullet),
    TAB(XK_filledtribulletup),
    TAB(XK_filledtribulletdown),
    TAB(XK_leftpointer),
    TAB(XK_rightpointer),
    TAB(XK_club),
    TAB(XK_diamond),
    TAB(XK_heart),
    TAB(XK_maltesecross),
    TAB(XK_dagger),
    TAB(XK_doubledagger),
    TAB(XK_checkmark),
    TAB(XK_ballotcross),
    TAB(XK_musicalsharp),
    TAB(XK_musicalflat),
    TAB(XK_malesymbol),
    TAB(XK_femalesymbol),
    TAB(XK_telephone),
    TAB(XK_telephonerecorder),
    TAB(XK_phonographcopyright),
    TAB(XK_caret),
    TAB(XK_singlelowquotemark),
    TAB(XK_doublelowquotemark),
    TAB(XK_cursor),
    TAB(XK_leftcaret),
    TAB(XK_rightcaret),
    TAB(XK_downcaret),
    TAB(XK_upcaret),
    TAB(XK_overbar),
    TAB(XK_downtack),
    TAB(XK_upshoe),
    TAB(XK_downstile),
    TAB(XK_underbar),
    TAB(XK_jot),
    TAB(XK_quad),
    TAB(XK_uptack),
    TAB(XK_circle),
    TAB(XK_upstile),
    TAB(XK_downshoe),
    TAB(XK_rightshoe),
    TAB(XK_leftshoe),
    TAB(XK_lefttack),
    TAB(XK_righttack),
    TAB(XK_hebrew_doublelowline),
    TAB(XK_hebrew_aleph),
    TAB(XK_hebrew_bet),
    TAB(XK_hebrew_beth),
    TAB(XK_hebrew_gimel),
    TAB(XK_hebrew_gimmel),
    TAB(XK_hebrew_dalet),
    TAB(XK_hebrew_daleth),
    TAB(XK_hebrew_he),
    TAB(XK_hebrew_waw),
    TAB(XK_hebrew_zain),
    TAB(XK_hebrew_zayin),
    TAB(XK_hebrew_chet),
    TAB(XK_hebrew_het),
    TAB(XK_hebrew_tet),
    TAB(XK_hebrew_teth),
    TAB(XK_hebrew_yod),
    TAB(XK_hebrew_finalkaph),
    TAB(XK_hebrew_kaph),
    TAB(XK_hebrew_lamed),
    TAB(XK_hebrew_finalmem),
    TAB(XK_hebrew_mem),
    TAB(XK_hebrew_finalnun),
    TAB(XK_hebrew_nun),
    TAB(XK_hebrew_samech),
    TAB(XK_hebrew_samekh),
    TAB(XK_hebrew_ayin),
    TAB(XK_hebrew_finalpe),
    TAB(XK_hebrew_pe),
    TAB(XK_hebrew_finalzade),
    TAB(XK_hebrew_finalzadi),
    TAB(XK_hebrew_zade),
    TAB(XK_hebrew_zadi),
    TAB(XK_hebrew_qoph),
    TAB(XK_hebrew_kuf),
    TAB(XK_hebrew_resh),
    TAB(XK_hebrew_shin),
    TAB(XK_hebrew_taw),
    TAB(XK_hebrew_taf),
    TAB(XK_Hebrew_switch),
    TAB(XK_Thai_kokai),
    TAB(XK_Thai_khokhai),
    TAB(XK_Thai_khokhuat),
    TAB(XK_Thai_khokhwai),
    TAB(XK_Thai_khokhon),
    TAB(XK_Thai_khorakhang),
    TAB(XK_Thai_ngongu),
    TAB(XK_Thai_chochan),
    TAB(XK_Thai_choching),
    TAB(XK_Thai_chochang),
    TAB(XK_Thai_soso),
    TAB(XK_Thai_chochoe),
    TAB(XK_Thai_yoying),
    TAB(XK_Thai_dochada),
    TAB(XK_Thai_topatak),
    TAB(XK_Thai_thothan),
    TAB(XK_Thai_thonangmontho),
    TAB(XK_Thai_thophuthao),
    TAB(XK_Thai_nonen),
    TAB(XK_Thai_dodek),
    TAB(XK_Thai_totao),
    TAB(XK_Thai_thothung),
    TAB(XK_Thai_thothahan),
    TAB(XK_Thai_thothong),
    TAB(XK_Thai_nonu),
    TAB(XK_Thai_bobaimai),
    TAB(XK_Thai_popla),
    TAB(XK_Thai_phophung),
    TAB(XK_Thai_fofa),
    TAB(XK_Thai_phophan),
    TAB(XK_Thai_fofan),
    TAB(XK_Thai_phosamphao),
    TAB(XK_Thai_moma),
    TAB(XK_Thai_yoyak),
    TAB(XK_Thai_rorua),
    TAB(XK_Thai_ru),
    TAB(XK_Thai_loling),
    TAB(XK_Thai_lu),
    TAB(XK_Thai_wowaen),
    TAB(XK_Thai_sosala),
    TAB(XK_Thai_sorusi),
    TAB(XK_Thai_sosua),
    TAB(XK_Thai_hohip),
    TAB(XK_Thai_lochula),
    TAB(XK_Thai_oang),
    TAB(XK_Thai_honokhuk),
    TAB(XK_Thai_paiyannoi),
    TAB(XK_Thai_saraa),
    TAB(XK_Thai_maihanakat),
    TAB(XK_Thai_saraaa),
    TAB(XK_Thai_saraam),
    TAB(XK_Thai_sarai),
    TAB(XK_Thai_saraii),
    TAB(XK_Thai_saraue),
    TAB(XK_Thai_sarauee),
    TAB(XK_Thai_sarau),
    TAB(XK_Thai_sarauu),
    TAB(XK_Thai_phinthu),
    TAB(XK_Thai_maihanakat_maitho),
    TAB(XK_Thai_baht),
    TAB(XK_Thai_sarae),
    TAB(XK_Thai_saraae),
    TAB(XK_Thai_sarao),
    TAB(XK_Thai_saraaimaimuan),
    TAB(XK_Thai_saraaimaimalai),
    TAB(XK_Thai_lakkhangyao),
    TAB(XK_Thai_maiyamok),
    TAB(XK_Thai_maitaikhu),
    TAB(XK_Thai_maiek),
    TAB(XK_Thai_maitho),
    TAB(XK_Thai_maitri),
    TAB(XK_Thai_maichattawa),
    TAB(XK_Thai_thanthakhat),
    TAB(XK_Thai_nikhahit),
    TAB(XK_Thai_leksun),
    TAB(XK_Thai_leknung),
    TAB(XK_Thai_leksong),
    TAB(XK_Thai_leksam),
    TAB(XK_Thai_leksi),
    TAB(XK_Thai_lekha),
    TAB(XK_Thai_lekhok),
    TAB(XK_Thai_lekchet),
    TAB(XK_Thai_lekpaet),
    TAB(XK_Thai_lekkao),
    TAB(XK_Hangul),
    TAB(XK_Hangul_Start),
    TAB(XK_Hangul_End),
    TAB(XK_Hangul_Hanja),
    TAB(XK_Hangul_Jamo),
    TAB(XK_Hangul_Romaja),
    TAB(XK_Hangul_Codeinput),
    TAB(XK_Hangul_Jeonja),
    TAB(XK_Hangul_Banja),
    TAB(XK_Hangul_PreHanja),
    TAB(XK_Hangul_PostHanja),
    TAB(XK_Hangul_SingleCandidate),
    TAB(XK_Hangul_MultipleCandidate),
    TAB(XK_Hangul_PreviousCandidate),
    TAB(XK_Hangul_Special),
    TAB(XK_Hangul_switch),
    TAB(XK_Hangul_Kiyeog),
    TAB(XK_Hangul_SsangKiyeog),
    TAB(XK_Hangul_KiyeogSios),
    TAB(XK_Hangul_Nieun),
    TAB(XK_Hangul_NieunJieuj),
    TAB(XK_Hangul_NieunHieuh),
    TAB(XK_Hangul_Dikeud),
    TAB(XK_Hangul_SsangDikeud),
    TAB(XK_Hangul_Rieul),
    TAB(XK_Hangul_RieulKiyeog),
    TAB(XK_Hangul_RieulMieum),
    TAB(XK_Hangul_RieulPieub),
    TAB(XK_Hangul_RieulSios),
    TAB(XK_Hangul_RieulTieut),
    TAB(XK_Hangul_RieulPhieuf),
    TAB(XK_Hangul_RieulHieuh),
    TAB(XK_Hangul_Mieum),
    TAB(XK_Hangul_Pieub),
    TAB(XK_Hangul_SsangPieub),
    TAB(XK_Hangul_PieubSios),
    TAB(XK_Hangul_Sios),
    TAB(XK_Hangul_SsangSios),
    TAB(XK_Hangul_Ieung),
    TAB(XK_Hangul_Jieuj),
    TAB(XK_Hangul_SsangJieuj),
    TAB(XK_Hangul_Cieuc),
    TAB(XK_Hangul_Khieuq),
    TAB(XK_Hangul_Tieut),
    TAB(XK_Hangul_Phieuf),
    TAB(XK_Hangul_Hieuh),
    TAB(XK_Hangul_A),
    TAB(XK_Hangul_AE),
    TAB(XK_Hangul_YA),
    TAB(XK_Hangul_YAE),
    TAB(XK_Hangul_EO),
    TAB(XK_Hangul_E),
    TAB(XK_Hangul_YEO),
    TAB(XK_Hangul_YE),
    TAB(XK_Hangul_O),
    TAB(XK_Hangul_WA),
    TAB(XK_Hangul_WAE),
    TAB(XK_Hangul_OE),
    TAB(XK_Hangul_YO),
    TAB(XK_Hangul_U),
    TAB(XK_Hangul_WEO),
    TAB(XK_Hangul_WE),
    TAB(XK_Hangul_WI),
    TAB(XK_Hangul_YU),
    TAB(XK_Hangul_EU),
    TAB(XK_Hangul_YI),
    TAB(XK_Hangul_I),
    TAB(XK_Hangul_J_Kiyeog),
    TAB(XK_Hangul_J_SsangKiyeog),
    TAB(XK_Hangul_J_KiyeogSios),
    TAB(XK_Hangul_J_Nieun),
    TAB(XK_Hangul_J_NieunJieuj),
    TAB(XK_Hangul_J_NieunHieuh),
    TAB(XK_Hangul_J_Dikeud),
    TAB(XK_Hangul_J_Rieul),
    TAB(XK_Hangul_J_RieulKiyeog),
    TAB(XK_Hangul_J_RieulMieum),
    TAB(XK_Hangul_J_RieulPieub),
    TAB(XK_Hangul_J_RieulSios),
    TAB(XK_Hangul_J_RieulTieut),
    TAB(XK_Hangul_J_RieulPhieuf),
    TAB(XK_Hangul_J_RieulHieuh),
    TAB(XK_Hangul_J_Mieum),
    TAB(XK_Hangul_J_Pieub),
    TAB(XK_Hangul_J_PieubSios),
    TAB(XK_Hangul_J_Sios),
    TAB(XK_Hangul_J_SsangSios),
    TAB(XK_Hangul_J_Ieung),
    TAB(XK_Hangul_J_Jieuj),
    TAB(XK_Hangul_J_Cieuc),
    TAB(XK_Hangul_J_Khieuq),
    TAB(XK_Hangul_J_Tieut),
    TAB(XK_Hangul_J_Phieuf),
    TAB(XK_Hangul_J_Hieuh),
    TAB(XK_Hangul_RieulYeorinHieuh),
    TAB(XK_Hangul_SunkyeongeumMieum),
    TAB(XK_Hangul_SunkyeongeumPieub),
    TAB(XK_Hangul_PanSios),
    TAB(XK_Hangul_KkogjiDalrinIeung),
    TAB(XK_Hangul_SunkyeongeumPhieuf),
    TAB(XK_Hangul_YeorinHieuh),
    TAB(XK_Hangul_AraeA),
    TAB(XK_Hangul_AraeAE),
    TAB(XK_Hangul_J_PanSios),
    TAB(XK_Hangul_J_KkogjiDalrinIeung),
    TAB(XK_Hangul_J_YeorinHieuh),
    TAB(XK_Korean_Won),
    TAB(XK_Armenian_ligature_ew),
    TAB(XK_Armenian_full_stop),
    TAB(XK_Armenian_verjaket),
    TAB(XK_Armenian_separation_mark),
    TAB(XK_Armenian_but),
    TAB(XK_Armenian_hyphen),
    TAB(XK_Armenian_yentamna),
    TAB(XK_Armenian_exclam),
    TAB(XK_Armenian_amanak),
    TAB(XK_Armenian_accent),
    TAB(XK_Armenian_shesht),
    TAB(XK_Armenian_question),
    TAB(XK_Armenian_paruyk),
    TAB(XK_Armenian_AYB),
    TAB(XK_Armenian_ayb),
    TAB(XK_Armenian_BEN),
    TAB(XK_Armenian_ben),
    TAB(XK_Armenian_GIM),
    TAB(XK_Armenian_gim),
    TAB(XK_Armenian_DA),
    TAB(XK_Armenian_da),
    TAB(XK_Armenian_YECH),
    TAB(XK_Armenian_yech),
    TAB(XK_Armenian_ZA),
    TAB(XK_Armenian_za),
    TAB(XK_Armenian_E),
    TAB(XK_Armenian_e),
    TAB(XK_Armenian_AT),
    TAB(XK_Armenian_at),
    TAB(XK_Armenian_TO),
    TAB(XK_Armenian_to),
    TAB(XK_Armenian_ZHE),
    TAB(XK_Armenian_zhe),
    TAB(XK_Armenian_INI),
    TAB(XK_Armenian_ini),
    TAB(XK_Armenian_LYUN),
    TAB(XK_Armenian_lyun),
    TAB(XK_Armenian_KHE),
    TAB(XK_Armenian_khe),
    TAB(XK_Armenian_TSA),
    TAB(XK_Armenian_tsa),
    TAB(XK_Armenian_KEN),
    TAB(XK_Armenian_ken),
    TAB(XK_Armenian_HO),
    TAB(XK_Armenian_ho),
    TAB(XK_Armenian_DZA),
    TAB(XK_Armenian_dza),
    TAB(XK_Armenian_GHAT),
    TAB(XK_Armenian_ghat),
    TAB(XK_Armenian_TCHE),
    TAB(XK_Armenian_tche),
    TAB(XK_Armenian_MEN),
    TAB(XK_Armenian_men),
    TAB(XK_Armenian_HI),
    TAB(XK_Armenian_hi),
    TAB(XK_Armenian_NU),
    TAB(XK_Armenian_nu),
    TAB(XK_Armenian_SHA),
    TAB(XK_Armenian_sha),
    TAB(XK_Armenian_VO),
    TAB(XK_Armenian_vo),
    TAB(XK_Armenian_CHA),
    TAB(XK_Armenian_cha),
    TAB(XK_Armenian_PE),
    TAB(XK_Armenian_pe),
    TAB(XK_Armenian_JE),
    TAB(XK_Armenian_je),
    TAB(XK_Armenian_RA),
    TAB(XK_Armenian_ra),
    TAB(XK_Armenian_SE),
    TAB(XK_Armenian_se),
    TAB(XK_Armenian_VEV),
    TAB(XK_Armenian_vev),
    TAB(XK_Armenian_TYUN),
    TAB(XK_Armenian_tyun),
    TAB(XK_Armenian_RE),
    TAB(XK_Armenian_re),
    TAB(XK_Armenian_TSO),
    TAB(XK_Armenian_tso),
    TAB(XK_Armenian_VYUN),
    TAB(XK_Armenian_vyun),
    TAB(XK_Armenian_PYUR),
    TAB(XK_Armenian_pyur),
    TAB(XK_Armenian_KE),
    TAB(XK_Armenian_ke),
    TAB(XK_Armenian_O),
    TAB(XK_Armenian_o),
    TAB(XK_Armenian_FE),
    TAB(XK_Armenian_fe),
    TAB(XK_Armenian_apostrophe),
    TAB(XK_Georgian_an),
    TAB(XK_Georgian_ban),
    TAB(XK_Georgian_gan),
    TAB(XK_Georgian_don),
    TAB(XK_Georgian_en),
    TAB(XK_Georgian_vin),
    TAB(XK_Georgian_zen),
    TAB(XK_Georgian_tan),
    TAB(XK_Georgian_in),
    TAB(XK_Georgian_kan),
    TAB(XK_Georgian_las),
    TAB(XK_Georgian_man),
    TAB(XK_Georgian_nar),
    TAB(XK_Georgian_on),
    TAB(XK_Georgian_par),
    TAB(XK_Georgian_zhar),
    TAB(XK_Georgian_rae),
    TAB(XK_Georgian_san),
    TAB(XK_Georgian_tar),
    TAB(XK_Georgian_un),
    TAB(XK_Georgian_phar),
    TAB(XK_Georgian_khar),
    TAB(XK_Georgian_ghan),
    TAB(XK_Georgian_qar),
    TAB(XK_Georgian_shin),
    TAB(XK_Georgian_chin),
    TAB(XK_Georgian_can),
    TAB(XK_Georgian_jil),
    TAB(XK_Georgian_cil),
    TAB(XK_Georgian_char),
    TAB(XK_Georgian_xan),
    TAB(XK_Georgian_jhan),
    TAB(XK_Georgian_hae),
    TAB(XK_Georgian_he),
    TAB(XK_Georgian_hie),
    TAB(XK_Georgian_we),
    TAB(XK_Georgian_har),
    TAB(XK_Georgian_hoe),
    TAB(XK_Georgian_fi),
    TAB(XK_Xabovedot),
    TAB(XK_Ibreve),
    TAB(XK_Zstroke),
    TAB(XK_Gcaron),
    TAB(XK_Ocaron),
    TAB(XK_Obarred),
    TAB(XK_xabovedot),
    TAB(XK_ibreve),
    TAB(XK_zstroke),
    TAB(XK_gcaron),
    TAB(XK_ocaron),
    TAB(XK_obarred),
    TAB(XK_SCHWA),
    TAB(XK_schwa),
    TAB(XK_EZH),
    TAB(XK_ezh),
    TAB(XK_Lbelowdot),
    TAB(XK_lbelowdot),
    TAB(XK_Abelowdot),
    TAB(XK_abelowdot),
    TAB(XK_Ahook),
    TAB(XK_ahook),
    TAB(XK_Acircumflexacute),
    TAB(XK_acircumflexacute),
    TAB(XK_Acircumflexgrave),
    TAB(XK_acircumflexgrave),
    TAB(XK_Acircumflexhook),
    TAB(XK_acircumflexhook),
    TAB(XK_Acircumflextilde),
    TAB(XK_acircumflextilde),
    TAB(XK_Acircumflexbelowdot),
    TAB(XK_acircumflexbelowdot),
    TAB(XK_Abreveacute),
    TAB(XK_abreveacute),
    TAB(XK_Abrevegrave),
    TAB(XK_abrevegrave),
    TAB(XK_Abrevehook),
    TAB(XK_abrevehook),
    TAB(XK_Abrevetilde),
    TAB(XK_abrevetilde),
    TAB(XK_Abrevebelowdot),
    TAB(XK_abrevebelowdot),
    TAB(XK_Ebelowdot),
    TAB(XK_ebelowdot),
    TAB(XK_Ehook),
    TAB(XK_ehook),
    TAB(XK_Etilde),
    TAB(XK_etilde),
    TAB(XK_Ecircumflexacute),
    TAB(XK_ecircumflexacute),
    TAB(XK_Ecircumflexgrave),
    TAB(XK_ecircumflexgrave),
    TAB(XK_Ecircumflexhook),
    TAB(XK_ecircumflexhook),
    TAB(XK_Ecircumflextilde),
    TAB(XK_ecircumflextilde),
    TAB(XK_Ecircumflexbelowdot),
    TAB(XK_ecircumflexbelowdot),
    TAB(XK_Ihook),
    TAB(XK_ihook),
    TAB(XK_Ibelowdot),
    TAB(XK_ibelowdot),
    TAB(XK_Obelowdot),
    TAB(XK_obelowdot),
    TAB(XK_Ohook),
    TAB(XK_ohook),
    TAB(XK_Ocircumflexacute),
    TAB(XK_ocircumflexacute),
    TAB(XK_Ocircumflexgrave),
    TAB(XK_ocircumflexgrave),
    TAB(XK_Ocircumflexhook),
    TAB(XK_ocircumflexhook),
    TAB(XK_Ocircumflextilde),
    TAB(XK_ocircumflextilde),
    TAB(XK_Ocircumflexbelowdot),
    TAB(XK_ocircumflexbelowdot),
    TAB(XK_Ohornacute),
    TAB(XK_ohornacute),
    TAB(XK_Ohorngrave),
    TAB(XK_ohorngrave),
    TAB(XK_Ohornhook),
    TAB(XK_ohornhook),
    TAB(XK_Ohorntilde),
    TAB(XK_ohorntilde),
    TAB(XK_Ohornbelowdot),
    TAB(XK_ohornbelowdot),
    TAB(XK_Ubelowdot),
    TAB(XK_ubelowdot),
    TAB(XK_Uhook),
    TAB(XK_uhook),
    TAB(XK_Uhornacute),
    TAB(XK_uhornacute),
    TAB(XK_Uhorngrave),
    TAB(XK_uhorngrave),
    TAB(XK_Uhornhook),
    TAB(XK_uhornhook),
    TAB(XK_Uhorntilde),
    TAB(XK_uhorntilde),
    TAB(XK_Uhornbelowdot),
    TAB(XK_uhornbelowdot),
    TAB(XK_Ybelowdot),
    TAB(XK_ybelowdot),
    TAB(XK_Yhook),
    TAB(XK_yhook),
    TAB(XK_Ytilde),
    TAB(XK_ytilde),
    TAB(XK_Ohorn),
    TAB(XK_ohorn),
    TAB(XK_Uhorn),
    TAB(XK_uhorn),
    TAB(XK_EcuSign),
    TAB(XK_ColonSign),
    TAB(XK_CruzeiroSign),
    TAB(XK_FFrancSign),
    TAB(XK_LiraSign),
    TAB(XK_MillSign),
    TAB(XK_NairaSign),
    TAB(XK_PesetaSign),
    TAB(XK_RupeeSign),
    TAB(XK_WonSign),
    TAB(XK_NewSheqelSign),
    TAB(XK_DongSign),
    TAB(XK_EuroSign),
    TAB(XK_zerosuperior),
    TAB(XK_foursuperior),
    TAB(XK_fivesuperior),
    TAB(XK_sixsuperior),
    TAB(XK_sevensuperior),
    TAB(XK_eightsuperior),
    TAB(XK_ninesuperior),
    TAB(XK_zerosubscript),
    TAB(XK_onesubscript),
    TAB(XK_twosubscript),
    TAB(XK_threesubscript),
    TAB(XK_foursubscript),
    TAB(XK_fivesubscript),
    TAB(XK_sixsubscript),
    TAB(XK_sevensubscript),
    TAB(XK_eightsubscript),
    TAB(XK_ninesubscript),
    TAB(XK_partdifferential),
    TAB(XK_emptyset),
    TAB(XK_elementof),
    TAB(XK_notelementof),
    TAB(XK_containsas),
    TAB(XK_squareroot),
    TAB(XK_cuberoot),
    TAB(XK_fourthroot),
    TAB(XK_dintegral),
    TAB(XK_tintegral),
    TAB(XK_because),
    TAB(XK_approxeq),
    TAB(XK_notapproxeq),
    TAB(XK_notidentical),
    TAB(XK_stricteq),
#undef TAB
};

std::string debX11_keysym(KeySym keysym)
{
    for (size_t i = 0; i < ARRAY_SIZE(XKeySymNames); i++)
        if (XKeySymNames[i].sym == keysym)
            return XKeySymNames[i].name;
    return ssprintf("Unknown(%lx)", keysym);
}

std::string debX11_atom(Atom atom)
{
    if (atom == None) return "None";
    char *name = XGetAtomName(debX11display, atom);
    std::string res(name);
    XFree(name);
    return res;
}

static Window debX11_parent(Window win) {
    Window root, parent, *children = NULL;
    unsigned num_children;

    if (!XQueryTree(debX11display, win, &root, &parent, &children, &num_children))
        return None;

    XFree(children);
    return parent;
}

std::string debX11_win(Window w)
{
    if (w == None)
        return "None";

    if (w == DefaultRootWindow(debX11display))
        return "DefaultRootWindow";

    Status r;
    char *name;

    if ((w & 0xf) == 2 || !(r = XFetchName(debX11display, w, &name))) {
        return ssprintf("win(0x%lx)", w);
    }
    if (!name || !*name) {
        XFree(name);
        return ssprintf("win(%T::0x%lx)", debX11_win(debX11_parent(w)), w);
    }
    std::string res = ssprintf("win(%s)", name);
    XFree(name);
    return res;
}

void debX11ev2(Window dst, XEvent *event, const char* dir,
              Window src, const char *fmt, ...)
{
    va_list ap;
    char msgbuf[4096] = {};
    va_start(ap, fmt); vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap); va_end(ap);

    if (src != None)
        DEBUGF("%T %s %T: %T%s{ %T } %s",
            debX11_win(dst), dir, debX11_win(src),
            debX11_event(event), event->xany.send_event ? "+": "",
            debX11_win(event->xany.window), msgbuf);
    else
        DEBUGF("%T: %T%s{ %T } %s", debX11_win(dst),
            debX11_event(event), event->xany.send_event ? "+": "",
            debX11_win(event->xany.window), msgbuf);
}

void debX11str(Window win, const char *fmt, ...)
{
    va_list ap;
    char msgbuf[4096] = {};
    va_start(ap, fmt); vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap); va_end(ap);
    DEBUGF("%T: %s", debX11_win(win), msgbuf);
}

static char *debX11_itoa(int i)
{
    static char buff[32];
    sprintf(buff, "%d", i);
    return buff;
}

int debX11_error(Display *d, XErrorEvent *e)
{
    static int cnt = 1;
    char buff[1024] = { };
    /*
    typedef struct {
        int type;
        Display *display;       	// Display the event was read from
        XID resourceid;         	// resource id
        unsigned long serial;          	// serial number of failed request
        unsigned char error_code;       // error code of failed request
        unsigned char request_code;     // Major op-code of failed request
        unsigned char minor_code;       // Minor op-code of failed request
    } XErrorEvent;
    */
    fprintf(stderr, "X error [%d]:\n", cnt++);
    fprintf(stderr, "    XGetErrorText() = %d: %s\n",
        XGetErrorText(d, e->error_code, buff, sizeof(buff)-1), buff);
    fprintf(stderr, "    XGetErrorDatabaseText(XProtoError) = %d: %s\n",
        XGetErrorDatabaseText(d, "XProtoError", debX11_itoa(e->error_code),
            "[Unknown XProtoError]", buff, sizeof(buff)-1), buff);
    fprintf(stderr, "    XGetErrorDatabaseText(XRequest) = %d: %s\n",
        XGetErrorDatabaseText(d, "XRequest", debX11_itoa(e->request_code),
            "[Unknown XRequest]", buff, sizeof(buff)-1), buff);
    return 0;
}

int printf_err(const char* fmt, ...)
{
    va_list ap;
    va_start(ap, fmt);
    int res = vfprintf(stderr, fmt, ap);
    va_end(ap);
    return res;
}

std::string ssprintf(const char* fmt, ...)
{
    va_list ap;
    va_start(ap, fmt);

    va_list ap2; // unfortunately, you cannot consume a va_list twice
    va_copy(ap2, ap); // so we have to copy it
    const int sz = vsnprintf(nullptr, 0, fmt, ap2);
    va_end(ap2);

    if (sz < 0) return ""; //throw std::runtime_error{"sprintf encoding error"};
    std::string res(sz + 1, '\0'); res.resize(sz); // room for '\0'
    vsnprintf(&res[0], res.capacity(), fmt, ap);

    va_end(ap);
    return res;
}

extern "C" int printf_string(FILE *stream, const struct printf_info *info, const void *const *args);
extern "C" int printf_string_arginfo_size(const struct printf_info *info, size_t n, int *argtypes, int *sizes);

int printf_string(FILE *stream, const struct printf_info *info, const void *const *args)
{
    const std::string *p = (const std::string *) * (void **) args[0];
    // Pad to the minimum field width and print to the stream
    int len = fprintf(stream, "%*s", (info->left ? -info->width : info->width), p->c_str());
    return len;
}

int printf_string_arginfo_size(const struct printf_info *info, size_t n, int *argtypes, int *sizes)
{
    // We always take exactly one argument and this is a std::string
    if (n > 0) {
        argtypes[0] = PA_POINTER;
        sizes[0] = sizeof(std::string);
        (void) info;
    }
    return 1;
}

int debX11init(Display *display)
{
    debX11display = display;
    XSetErrorHandler(debX11_error);
    // Register the print function for std::string
    return register_printf_specifier('T', printf_string, printf_string_arginfo_size);
}
